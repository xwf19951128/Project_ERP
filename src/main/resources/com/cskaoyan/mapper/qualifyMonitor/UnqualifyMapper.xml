<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--需要将命名空间改造成对应接口的全类名-->
<mapper namespace="com.cskaoyan.mapper.qualifyMonitor.UnqualifyMapper">
    <!--查询不合格产品列表-->
    <resultMap id="unqualifyMapper" type="com.cskaoyan.bean.qualifyMonitor.UnqualifyApply">
        <result property="unqualifyApplyId" column="unqualify_apply_id"/>
        <result property="unqualifyItem" column="unqualify_item"/>
        <result property="unqualifyCount" column="unqualify_count"/>
        <result property="assemblyDate" column="assembly_date"/>
        <result property="applyDate" column="apply_date"/>
        <result property="note" column="note"/>
        
        <result property="productId" column="product_id"/>
        <result property="productName" column="product_name"/>

        <result property="empId" column="emp_id"/>
        <result property="empName" column="emp_name"/>
    </resultMap>
    <select id="queryUnqualifyApply" resultMap="unqualifyMapper">
        select
        ua.unqualify_apply_id,
        ua.product_id,
        ua.unqualify_item,
        ua.unqualify_count,
        ua.assembly_date,
        ua.emp_id,
        ua.apply_date,
        ua.note,
        em.emp_name,
        pr.product_name 
        from unqualify_apply ua
        left join employee em on ua.emp_id = em.emp_id
        left join product pr on pr.product_id = ua.product_id;
    </select>


    <!--新增不合格产品-->
    <insert id="insertUnqualify">
        insert into unqualify_apply (
        unqualify_apply_id,
        product_id,
        unqualify_item,
        unqualify_count,
        assembly_date,
        emp_id,
        apply_date,
        note)
        values (
        #{unqualifyApply.unqualifyApplyId},
        #{unqualifyApply.productId},
        #{unqualifyApply.unqualifyItem},
        #{unqualifyApply.unqualifyCount},
        #{unqualifyApply.assemblyDate},
        #{unqualifyApply.empId},
        #{unqualifyApply.applyDate},
        #{unqualifyApply.note});
    </insert>

    
    <!--删除-->
    <delete id="deleteUnqualifyById">
        delete from unqualify_apply where unqualify_apply_id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>


    <!--编辑不合格产品-->
    <update id="editUnqualify">
        update unqualify_apply set
        product_id = #{unqualifyApply.productId},
        unqualify_item = #{unqualifyApply.unqualifyItem},
        unqualify_count = #{unqualifyApply.unqualifyCount},
        assembly_date = #{unqualifyApply.assemblyDate},
        emp_id = #{unqualifyApply.empId},
        apply_date = #{unqualifyApply.applyDate},
        note = #{unqualifyApply.note}
        where unqualify_apply_id = #{unqualifyApply.unqualifyApplyId}
    </update>

    <!--根据id进行模糊查询-->
    <select id="searchUnqualifyById" resultMap="unqualifyMapper">
        select
        ua.unqualify_apply_id,
        ua.product_id,
        ua.unqualify_item,
        ua.unqualify_count,
        ua.assembly_date,
        ua.emp_id,
        ua.apply_date,
        ua.note,
        em.emp_name,
        pr.product_name
        from unqualify_apply ua
        left join employee em on ua.emp_id = em.emp_id
        left join product pr on pr.product_id = ua.product_id
        where ua.unqualify_apply_id like #{id};
    </select>

    <!--根据产品名称进行模糊查询-->
    <select id="searchUnqualifyByName" resultMap="unqualifyMapper">
        select
        ua.unqualify_apply_id,
        ua.product_id,
        ua.unqualify_item,
        ua.unqualify_count,
        ua.assembly_date,
        ua.emp_id,
        ua.apply_date,
        ua.note,
        em.emp_name,
        pr.product_name
        from unqualify_apply ua
        left join employee em on ua.emp_id = em.emp_id
        left join product pr on pr.product_id = ua.product_id
        where pr.product_name like #{productName};
    </select>
</mapper>