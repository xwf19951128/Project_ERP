<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cskaoyan.mapper.device.DeviceCheckMapper">


    <resultMap id="deviceCheckMap" type="com.cskaoyan.bean.device.DeviceCheck">
        <id column="device_check_id" jdbcType="VARCHAR" property="deviceCheckId" />
        <result column="device_id" jdbcType="VARCHAR" property="deviceId" />
        <result column="device_check_emp_id" jdbcType="VARCHAR" property="deviceCheckEmpId" />
        <result column="device_check_date" jdbcType="TIMESTAMP" property="deviceCheckDate" />
        <result column="device_check_result" jdbcType="VARCHAR" property="deviceCheckResult" />
        <result column="device_check_fault_id" jdbcType="VARCHAR" property="deviceCheckFaultId" />
    </resultMap>

    <resultMap id="deviceCheckVoMap" type="com.cskaoyan.bean.device.more.DeviceCheckVo">
        <id column="device_check_id" jdbcType="VARCHAR" property="deviceCheckId" />
        <result column="device_id" jdbcType="VARCHAR" property="deviceId" />
        <result column="device_check_emp_id" jdbcType="VARCHAR" property="deviceCheckEmpId" />
        <result column="device_check_date" jdbcType="TIMESTAMP" property="deviceCheckDate" />
        <result column="device_check_result" jdbcType="VARCHAR" property="deviceCheckResult" />
        <result column="device_check_fault_id" jdbcType="VARCHAR" property="deviceCheckFaultId" />

        <result column="device_name" property="deviceName" jdbcType="VARCHAR" />
        <result column="device_check_emp" property="deviceCheckEmp" jdbcType="VARCHAR" />

    </resultMap>

    <sql id="Base_Column_List">
    device_check_id,
    device_id,
    device_check_emp_id,
    device_check_date,
     device_check_result,
    device_check_fault_id
    </sql>

    <select id="queryAllDeviceCheck" resultMap="deviceCheckVoMap">
      select
      dc.device_check_id,
      dc.device_id,
      dc.device_check_emp_id,
      dc.device_check_date,
      dc.device_check_result,
      dc.device_check_fault_id,
      e.emp_name as device_check_emp,
      d.device_name
      from device_check dc
      left join device d on d.device_id=dc.device_id
      left join employee e on e.emp_id=dc.device_check_emp_id
    </select>

    <!--新增操作-->
    <insert id="insertDeviceCheck">
        insert into device_check
        (<include refid="Base_Column_List"/>)
        values (#{deviceCheckId}, #{deviceId}, #{deviceCheckEmpId},
        #{deviceCheckDate}, #{deviceCheckResult}, #{deviceCheckFaultId}
        )
    </insert>

    <!--编辑一个更新操作-->
    <update id="updateDeviceCheck">
       update device_check set
       device_id = #{deviceId,jdbcType=VARCHAR},
       device_check_emp_id = #{deviceCheckEmpId,jdbcType=VARCHAR},
       device_check_date = #{deviceCheckDate,jdbcType=TIMESTAMP},
       device_check_result = #{deviceCheckResult,jdbcType=VARCHAR},
       device_check_fault_id = #{deviceCheckFaultId,jdbcType=VARCHAR}
       where device_check_id = #{deviceCheckId,jdbcType=VARCHAR}

    </update>

    <delete id="deleteDeviceCheck">
        delete from device_check where device_check_id in
        <foreach collection="array" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>


    <!--1.模糊查询1-->
    <select id="searchDeviceCheckByDeviceCheckId" resultMap="deviceCheckVoMap">
      select
      dc.device_check_id,
      dc.device_id,
      dc.device_check_emp_id,
      dc.device_check_date,
      dc.device_check_result,
      dc.device_check_fault_id,
      e.emp_name as device_check_emp,
      d.device_name
      from device_check dc
      left join device d on d.device_id=dc.device_id
      left join employee e on e.emp_id=dc.device_check_emp_id
      where dc.device_check_id like concat('%',#{searchValue},'%')
    </select>
    <!--模糊查询2-->
    <select id="searchDeviceCheckByDeviceName" resultMap="deviceCheckVoMap">
         select
      dc.device_check_id,
      dc.device_id,
      dc.device_check_emp_id,
      dc.device_check_date,
      dc.device_check_result,
      dc.device_check_fault_id,
      e.emp_name as device_check_emp,
      d.device_name
      from device_check dc
      left join device d on d.device_id=dc.device_id
      left join employee e on e.emp_id=dc.device_check_emp_id
      where d.device_name like concat('%',#{searchValue},'%')
    </select>

</mapper>